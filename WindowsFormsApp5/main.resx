<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button8.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAACFQTFRF////
        zhwcywAAzhkZ8tLS/ff3zRMT89XVzyYm9Nra56WlaxY6rAAABJtJREFUeF7d3MmS6jAQRFEDzdT//8Gv
        od08Bg8aqjIv1EreKO4Jh1kQIQ2Lsz+dxxV3zqf9uGqY/e6wPY5r6hy3h10z8Qe42cCJx+1m00y8AuHE
        C7CZOALRxF9gI/EGBBP/gE3EO+BmByUet7uxsIF4D6QS74HVxEcgk/gIrCQ+A4nEZ2AV8RXII74CK4hT
        QBpxClhMnAayiNPAQuIckEScAxYR54Ec4jywgLgEpBCXgKvEZSCDuAxcIa4BCcQ14CJxHegnrgMXiCVA
        N7EEOEssA3qJZcAZYinQSSwFThLLgT5iOXCCWAN0EWuAL8Q6oIdYB3wi1gIdxFrgA7EeqCfWA++ILUA1
        sQV4I7YBtcQ24EhsBSqJrcBf4qkVqCO2A3+Ip+F8+9+4fjTEHuBme75sMD40jILYB7z2sYkBQDYxBNi3
        TS4xrIxKDOxiEkOriMTgJh4xvIhGTOhhEb8yavqIX+MuMZMCJBGTgBxiGpBCTAQyiKlAAjEZ6CemA91E
        AdBLlACdRBHQR5QBXUQh0EOUAh1EMVBPlAPVRANQS7QAlUQTUEe0AVVEI1BDtAIVRDMwn2gHZhMBwFwi
        AphJhADziBhgFhEEzCGigBlEGDCeiAP2Jj0TY3cLmsgoJDAyCwqMC8MCo9LAwJg4NDAiDw7sD8QDe4nf
        fGAv8Q2AfcT2EQI9RCnQQRQD9UQ5UE00ALVEC1BJNAF1RBtQRTQCNUQrUEE0A/OJdmA2EQDMJSKAmUQI
        MI+IAWYRQcAcIgqYQYQB44k4YDQRCIwlIoGRRCgwjogFRhHBwBgiGhhBhAP7iXhgL/ENgMPw3XFTymb7
        Pe4Cno9/hx//HX78b2k/EE6MAKKJMUAwMQqIJcYBocRIIJIYCwQSo4E4YjwQRswAoog5QBAxC4gh5gEh
        xEwggpgLBBCzgXZiPtBMVACtRA3QSFQBbUQd0ERUAi1ELdBAVAPlRD1QTHQApcQe4Fuce+oDvsHZtT7g
        G5w/7A+EEyPy0MSYODAxKg1LjAuDEiOzkMTYKCDx4++n+fg7hj7+nqgMIIqYAwQRs4AYYh4QQswEIoi5
        QAAxG2gn5gPNRAXQStQAjUQV0EbUAU1EJdBC1AINRDVQTtQDxUQHUEr0AIVEF1BG9AFFRCdQQvQCBUQ3
        MJ3oByYTCcBUIgOYSKQA04gcYBKxD7jygVdPQg0LmNBDA4YX8YDBTURgaBUTGNhFBYaVHTtuI8kF9hE3
        f21kYAiRDQwgnuHAXuJ5OB3Gdf1ogH3Ew2nY71qJKmAP8bDbD81EHbCdeAW2EpXAVuIIbCNqgW3EG7CF
        qAa2EO+A9UQ9sJ74AKwlOoC1xCdgHdEDrCO+AGuILmANcQJYTvQBy4mTwFKiE1hKnAGWEb3AMuIssITo
        BpYQF4DrRD9wnbgIXCMSgGvEFeAykQFcJq4Cl4gU4BKxADhP5ADniUXAOSIJOEcsBE4TWcBpYjFwikgD
        ThErgK9EHvCVWAV8JhKBz8RK4CORCXwkVgMfiFDghTgWtgDviFjgf2IT8EYEA/+IjcCRiAb+EpuBVyIc
        eCF2AH+Ip/O44s75tAQchn8sQnDfvokTEAAAAABJRU5ErkJggg==
</value>
  </data>
</root>